@import url("https://fonts.googleapis.com/css?family=Montserrat:300,400,500");
@import "config";

h2 {
  font-weight: 600;
  font-size: 2em;
  text-align: center;
}

button {
  display: block;
  padding: 12px 45px;
  text-transform: uppercase;
  color: #fff;
  font-size: 1em;
  background: none;
  border: 1px solid #fff;
  border-radius: 20px;
  cursor: pointer;
  outline: none;
}

.container {
  position: relative;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

.focus {
  position: absolute;
  width: $focus-area;
  height: 100vh;
  opacity: 1;
  z-index: 100;
  overflow: hidden;

  &.slide-r .center {
    transform: translateX(-$step3);
    transition: transform 2s ease-in-out;
  }

  .center {
    position: relative;
    background: linear-gradient(to right, #0f2027, #203a43, #2c5364);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: 0 0;
    width: 100vw;
    height: 100vh;
    transition: transform 2s ease-in-out;
  }

  &.slide-r {
    animation: 0.9s go;
    animation-fill-mode: forwards;
  }

  &.slide-l {
    animation: 0.9s go-back;
    animation-fill-mode: forwards;
  }
}

// togglers

.center {
  display: grid;
  grid-template-columns: $focus-area $focus-area;
  grid-template-rows: 100%;
  align-items: center;
  grid-gap: $gap;
  color: #fff;

  .signin-toggle,
  .signup-toggle {
    display: flex;
    flex-direction: column;
    width: 80%;
    margin: 0 auto;
    align-items: center;

    p {
      font-weight: 300;
      text-align: center;
      line-height: 1.4em;
      padding: 0.8em 0;
    }
  }
}

// Animations
@keyframes go {
  0% {
    transform: scaleX(1) translateX(0);
    animation-timing-function: ease-in;
  }

  30% {
    transform: scaleX($sfactor) translateX($step1);
    animation-timing-function: linear;
  }

  60% {
    transform: scaleX($sfactor) translateX($step2);
    animation-timing-function: linear;
  }

  100% {
    transform: scaleX(1) translateX($step3);
    animation-timing-function: ease-out;
  }
}

@keyframes go-back {
  0% {
    transform: scaleX(1) translateX($step3);
    animation-timing-function: ease-in;
  }

  30% {
    transform: scaleX($sfactor) translateX($step2);
    animation-timing-function: linear;
  }

  60% {
    transform: scaleX($sfactor) translateX($step1);
    animation-timing-function: linear;
  }

  100% {
    transform: scaleX(1) translateX(0vw);
    animation-timing-function: ease-out;
  }
}
